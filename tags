!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ptcar/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210110.0/
0	.vimrc	/^map 0 ^$/;"	m
<C-BS>	.vimrc	/^inoremap <C-BS> <C-w>$/;"	m
<C-b>	.vimrc	/^  inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(0)\\</;"	m
<C-b>	.vimrc	/^  nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<C-b>	.vimrc	/^  vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<C-f>	.vimrc	/^  inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(1)\\</;"	m
<C-f>	.vimrc	/^  nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<C-f>	.vimrc	/^  vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<C-h>	.vimrc	/^inoremap <C-h> <C-w>$/;"	m
<C-h>	.vimrc	/^map <C-h> <C-W>h$/;"	m
<C-j>	.vimrc	/^map <C-j> <C-W>j$/;"	m
<C-k>	.vimrc	/^map <C-k> <C-W>k$/;"	m
<C-l>	.vimrc	/^map <C-l> <C-W>l$/;"	m
<C-p><C-a>	.vimrc	/^nnoremap <silent><C-p><C-a> :CtrlPBufTag<cr>$/;"	m
<C-p><C-p>	.vimrc	/^nnoremap <silent><C-p><C-p> :CtrlP<cr>$/;"	m
<C-p><C-t>	.vimrc	/^nnoremap <silent><C-p><C-t> :CtrlPTag<cr>$/;"	m
<C-x>	.vimrc	/^inoremap <C-x> <esc>ddi$/;"	m
<C-x>	.vimrc	/^nnoremap <C-x> dd$/;"	m
<C-x>	.vimrc	/^vnoremap <C-x> d$/;"	m
<F8>	.vimrc	/^nnoremap <F8> :TagbarToggle<CR>$/;"	m
<S-TAB>	.vimrc	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	.vimrc	/^inoremap <silent><expr> <TAB>$/;"	m
<c-@>	.vimrc	/^  inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-space>	.vimrc	/^  inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	.vimrc	/^inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()$/;"	m
<leader>:	.vimrc	/^nmap <leader>: :!$/;"	m
<leader><leader>	.vimrc	/^map <leader><leader> <Plug>(easymotion-prefix)$/;"	m
<leader>ev	.vimrc	/^noremap <leader>ev :tabe ~\/.vimrc<cr>$/;"	m
<leader>gc	.vimrc	/^nnoremap <leader>gc :CommentNextUncommentedFunction<cr>$/;"	m
<leader>n	.vimrc	/^nnoremap <silent> <leader>n :NERDTreeToggle<cr>$/;"	m
<leader>sv	.vimrc	/^noremap <leader>sv :source ~\/.vimrc<cr>$/;"	m
<leader>w	.vimrc	/^nnoremap <leader>w :w!<cr>$/;"	m
CPU-temperature	i3/i3blocks.conf	/^[CPU-temperature]$/;"	s
CommentNextUncommentedFunction	.vimrc	/^command! CommentNextUncommentedFunction call s:commentunexportedfunction(ExportedFunctionRegex) $/;"	c
EDITOR	.tmux.conf	/^bind e new-window -n "~\/.tmux.conf.local" "EDITOR=\\${EDITOR\/\/mvim\/vim} && EDITOR=\\${EDITOR/;"	k
ExportedFunctionRegex	.vimrc	/^let ExportedFunctionRegex = '\\(\\\/\\\/.*\\n\\)\\@<!\\(func\\s\\(([a-zA-Z]\\+\\s\\+\\*\\{0,1\\}/;"	v
H	.vimrc	/^noremap H ^$/;"	m
K	.vimrc	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
L	.vimrc	/^noremap L \$$/;"	m
Weather	i3/scripts/openweather.conf	/^[Weather]$/;"	s
ac	.vimrc	/^omap ac <Plug>(coc-classobj-a)$/;"	m
ac	.vimrc	/^xmap ac <Plug>(coc-classobj-a)$/;"	m
af	.vimrc	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	.vimrc	/^xmap af <Plug>(coc-funcobj-a)$/;"	m
ask_confirmation	i3/scripts/shutdown_menu	/^function ask_confirmation() {$/;"	f
bandwidth	i3/i3blocks.conf	/^[bandwidth]$/;"	s
battery	i3/i3blocks.conf	/^[battery]$/;"	s
browser	i3/i3blocks.conf	/^[browser]$/;"	s
capability	i3/scripts/volume	/^capability() { # Return "Capture" if the device is a capture device$/;"	f
check_launcher	i3/scripts/shutdown_menu	/^function check_launcher() {$/;"	f
check_proc_net_dev	i3/scripts/bandwidth2	/^function check_proc_net_dev {$/;"	f
checkinstall	init.sh	/^checkinstall() {$/;"	f
color	i3/i3blocks.conf	/^color=#717171$/;"	k	section:simple-2
color	i3/i3blocks.conf	/^color=#7f3fbf$/;"	k	section:files
color	i3/i3blocks.conf	/^color=#807dfe$/;"	k	section:terminal
color	i3/i3blocks.conf	/^color=#ff7f81$/;"	k	section:browser
color	i3/scripts/openweather.conf	/^color=#7275b3$/;"	k	section:Weather
command	i3/i3blocks.conf	/^command=date '+%a %d %b %H:%M:%S'$/;"	k	section:time
command	i3/i3blocks.conf	/^command=firefox$/;"	k	section:browser
command	i3/i3blocks.conf	/^command=pavucontrol$/;"	k	section:pavucontrol
command	i3/i3blocks.conf	/^command=thunar ~\/$/;"	k	section:files
command	i3/i3blocks.conf	/^command=xfce4-terminal$/;"	k	section:terminal
command	i3/i3blocks.conf	/^command=~\/.config\/i3\/scripts\/bandwidth2$/;"	k	section:bandwidth
command	i3/i3blocks.conf	/^command=~\/.config\/i3\/scripts\/battery.sh$/;"	k	section:battery
command	i3/i3blocks.conf	/^command=~\/.config\/i3\/scripts\/cpu_usage$/;"	k	section:cpu_usage
command	i3/i3blocks.conf	/^command=~\/.config\/i3\/scripts\/disk$/;"	k	section:disk
command	i3/i3blocks.conf	/^command=~\/.config\/i3\/scripts\/keyhint.sh$/;"	k	section:keybindings
command	i3/i3blocks.conf	/^command=~\/.config\/i3\/scripts\/memory$/;"	k	section:memory
command	i3/i3blocks.conf	/^command=~\/.config\/i3\/scripts\/shutdown_menu -p rofi -c;$/;"	k	section:shutdown_menu
command	i3/i3blocks.conf	/^command=~\/.config\/i3\/scripts\/temperature$/;"	k	section:CPU-temperature
command	i3/i3blocks.conf	/^command=~\/.config\/i3\/scripts\/volume$/;"	k	section:volume-pulseaudio
command	i3/scripts/openweather.conf	/^command=~\/.config\/i3\/scripts\/openweather.sh$/;"	k	section:Weather
command_exists	i3/scripts/shutdown_menu	/^function command_exists() {$/;"	f
cpu_usage	i3/i3blocks.conf	/^[cpu_usage]$/;"	s
default_interface	i3/scripts/bandwidth2	/^function default_interface {$/;"	f
disk	i3/i3blocks.conf	/^[disk]$/;"	s
files	i3/i3blocks.conf	/^[files]$/;"	s
format	i3/scripts/volume	/^format() {$/;"	f
full_text	i3/i3blocks.conf	/^full_text= $/;"	k	section:files
full_text	i3/i3blocks.conf	/^full_text= $/;"	k	section:terminal
full_text	i3/i3blocks.conf	/^full_text= $/;"	k	section:browser
full_text	i3/i3blocks.conf	/^full_text=: :$/;"	k	section:simple-2
full_text	i3/i3blocks.conf	/^full_text= $/;"	k	section:shutdown_menu
full_text	i3/i3blocks.conf	/^full_text=$/;"	k	section:pavucontrol
full_text	i3/i3blocks.conf	/^full_text=$/;"	k	section:keybindings
g:AutoPairsShortcutBackInsert	.vimrc	/^let g:AutoPairsShortcutBackInsert=''$/;"	v
g:AutoPairsShortcutFastWrap	.vimrc	/^let g:AutoPairsShortcutFastWrap=''$/;"	v
g:AutoPairsShortcutJump	.vimrc	/^let g:AutoPairsShortcutJump=''$/;"	v
g:AutoPairsToggleShortcut	.vimrc	/^let g:AutoPairsToggleShortcut='ooooooooo'$/;"	v
g:NERDTreeGitStatusConcealBrackets	.vimrc	/^let g:NERDTreeGitStatusConcealBrackets = 1$/;"	v
g:airline#extensions#ale#enabled	.vimrc	/^let g:airline#extensions#ale#enabled = 1$/;"	v
g:ale_fix_on_save	.vimrc	/^let g:ale_fix_on_save = 1$/;"	v
g:ale_sign_column_always	.vimrc	/^let g:ale_sign_column_always = 1$/;"	v
g:ctrlp_extensions	.vimrc	/^let g:ctrlp_extensions = ['tag', 'buffertag', 'quickfix', 'dir', 'rtscript',$/;"	v
g:go_code_completion_enabled	.vimrc	/^let g:go_code_completion_enabled = 0$/;"	v
g:go_debug_mappings	.vimrc	/^let g:go_debug_mappings = {$/;"	v
g:go_debug_windows	.vimrc	/^let g:go_debug_windows = {$/;"	v
g:go_doc_keywordprg_enabled	.vimrc	/^let g:go_doc_keywordprg_enabled = 0$/;"	v
g:go_fmt_command	.vimrc	/^let g:go_fmt_command = "goimports"$/;"	v
g:go_fmt_fail_silently	.vimrc	/^let g:go_fmt_fail_silently = 0$/;"	v
g:go_highlight_build_constraints	.vimrc	/^let g:go_highlight_build_constraints = 1$/;"	v
g:go_highlight_extra_types	.vimrc	/^let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_fields	.vimrc	/^let g:go_highlight_fields = 1$/;"	v
g:go_highlight_function_calls	.vimrc	/^let g:go_highlight_function_calls = 1$/;"	v
g:go_highlight_functions	.vimrc	/^let g:go_highlight_functions = 1$/;"	v
g:go_highlight_operators	.vimrc	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_types	.vimrc	/^let g:go_highlight_types = 1$/;"	v
g:go_jump_to_error	.vimrc	/^let g:go_jump_to_error = 1$/;"	v
g:go_metalinter_autosave_enabled	.vimrc	/^let g:go_metalinter_autosave_enabled = ['all']$/;"	v
g:indent_guides_enable_on_vim_startup	.vimrc	/^let g:indent_guides_enable_on_vim_startup = 1$/;"	v
g:indent_guides_guide_size	.vimrc	/^let g:indent_guides_guide_size=1$/;"	v
g:indent_guides_start_level	.vimrc	/^let g:indent_guides_start_level = 2$/;"	v
g:rehash256	.vimrc	/^let g:rehash256 = 1$/;"	v
g:slime_default_config	.vimrc	/^let g:slime_default_config = {"socket_name": get(split($TMUX, ","), 0), "target_pane": ":.2"}$/;"	v
g:slime_target	.vimrc	/^let g:slime_target = "tmux"$/;"	v
g:solarized_italic	.vimrc	/^let g:solarized_italic=1$/;"	v
g:solarized_termcolors	.vimrc	/^let g:solarized_termcolors=256$/;"	v
g:vim_markdown_math	.vimrc	/^let g:vim_markdown_math = 1$/;"	v
gd	.vimrc	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gi	.vimrc	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	.vimrc	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	.vimrc	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
help	i3/scripts/cpu_usage	/^sub help {$/;"	s
help	i3/scripts/temperature	/^sub help {$/;"	s
hs_highlight_boolean	.vimrc	/^let hs_highlight_boolean = 1$/;"	v
hs_highlight_delimiters	.vimrc	/^let hs_highlight_delimiters = 1$/;"	v
hs_highlight_more_types	.vimrc	/^let hs_highlight_more_types = 1$/;"	v
hs_highlight_types	.vimrc	/^let hs_highlight_types = 1$/;"	v
ic	.vimrc	/^omap ic <Plug>(coc-classobj-i)$/;"	m
ic	.vimrc	/^xmap ic <Plug>(coc-classobj-i)$/;"	m
if	.vimrc	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	.vimrc	/^xmap if <Plug>(coc-funcobj-i)$/;"	m
infomsg	init.sh	/^infomsg () {$/;"	f
install	init.sh	/^install () {$/;"	f
instance	i3/i3blocks.conf	/^instance=Master$/;"	k	section:volume-pulseaudio
instance	i3/i3blocks.conf	/^instance=\/$/;"	k	section:disk
interval	i3/i3blocks.conf	/^interval=1$/;"	k	section:time
interval	i3/i3blocks.conf	/^interval=1$/;"	k	section:volume-pulseaudio
interval	i3/i3blocks.conf	/^interval=2$/;"	k	section:cpu_usage
interval	i3/i3blocks.conf	/^interval=2$/;"	k	section:memory
interval	i3/i3blocks.conf	/^interval=30$/;"	k	section:CPU-temperature
interval	i3/i3blocks.conf	/^interval=30$/;"	k	section:battery
interval	i3/i3blocks.conf	/^interval=30$/;"	k	section:disk
interval	i3/i3blocks.conf	/^interval=persist$/;"	k	section:bandwidth
interval	i3/scripts/openweather.conf	/^interval=1800$/;"	k	section:Weather
is_vim	.tmux.conf	/^is_vim="ps -o state= -o comm= -t '#{pane_tty}' \\$/;"	k
keybindings	i3/i3blocks.conf	/^[keybindings]$/;"	s
label	i3/i3blocks.conf	/^label=$/;"	k	section:CPU-temperature
label	i3/i3blocks.conf	/^label=   $/;"	k	section:disk
label	i3/i3blocks.conf	/^label= $/;"	k	section:battery
label	i3/i3blocks.conf	/^label= $/;"	k	section:cpu_usage
label	i3/i3blocks.conf	/^label= $/;"	k	section:memory
list_interfaces	i3/scripts/bandwidth2	/^function list_interfaces {$/;"	f
mapleader	.vimrc	/^let mapleader = ","$/;"	v
markup	i3/i3blocks.conf	/^markup=pango$/;"	k
memory	i3/i3blocks.conf	/^[memory]$/;"	s
pavucontrol	i3/i3blocks.conf	/^[pavucontrol]$/;"	s
prepare_launcher	i3/scripts/shutdown_menu	/^function prepare_launcher() {$/;"	f
s:build_go_files	.vimrc	/^function! s:build_go_files()$/;"	f
s:check_back_space	.vimrc	/^function! s:check_back_space() abort$/;"	f
s:commentunexportedfunction	.vimrc	/^function! s:commentunexportedfunction(var) abort$/;"	f
s:show_documentation	.vimrc	/^function! s:show_documentation()$/;"	f
separator	i3/i3blocks.conf	/^separator=false$/;"	k
shutdown_menu	i3/i3blocks.conf	/^[shutdown_menu]$/;"	s
simple-2	i3/i3blocks.conf	/^[simple-2]$/;"	s
terminal	i3/i3blocks.conf	/^[terminal]$/;"	s
time	i3/i3blocks.conf	/^[time]$/;"	s
tmux_version	.tmux.conf	/^tmux_version='$(tmux -V | sed -En "s\/^tmux ([0-9]+(.[0-9]+)?).*\/\\1\/p")'$/;"	k
volume	i3/scripts/volume	/^volume() {$/;"	f
volume-pulseaudio	i3/i3blocks.conf	/^[volume-pulseaudio]$/;"	s
